totalMovies = n(),
prctNAs = sum(is.na(length)) / n() * 100
) %>%
knitr::kable(format.args = list(big.mark = ","),
align = c('c', 'r', 'r', 'r', 'r'),
col.names = c("Decade", "Total Movie Length (min)", "Total NAs", "Total Movies", "% NAs"),
digits = 0)
myMovies %>%
group_by(decade) %>%
select(decade, length) %>%
summarise(
totalLenMin = sum(as.numeric(length), na.rm = T),
meanLength = mean(as.numeric(length), na.rm = T),
totalNAs = sum(is.na(length)),
totalMovies = n(),
prctNAs = sum(is.na(length)) / n() * 100
)
myMovies %>%
group_by(decade) %>%
select(decade, length) %>%
summarise(
totalLenMin = sum(as.numeric(length), na.rm = T),
meanLength = mean(as.numeric(length), na.rm = T),
medianLength = median(as.numeric(length), na.rm = T),
totalNAs = sum(is.na(length)),
totalMovies = n(),
prctNAs = sum(is.na(length)) / n() * 100
) %>%
knitr::kable(format.args = list(big.mark = ","),
align = c('c', 'r', 'r', 'r', 'r'),
col.names = c("Decade", "Total Movie Length (min)", "Mean Length", "Median Length", "Total NAs", "Total Movies", "% NAs"),
digits = 0)
myMovies %>%
group_by(decade) %>%
select(decade, length) %>%
summarise(
totalLenMin = sum(as.numeric(length), na.rm = T),
meanLength = mean(as.numeric(length), na.rm = T),
medianLength = median(as.numeric(length), na.rm = T),
totalNAs = sum(is.na(length)),
totalMovies = n(),
prctNAs = sum(is.na(length)) / n() * 100
) %>%
knitr::kable(format.args = list(big.mark = ","),
align = rep('c', 7),
col.names = c("Decade", "Total Movie Length (min)", "Mean Length", "Median Length", "Total NAs", "Total Movies", "% NAs"),
digits = 0)
myAtomicVector_01 <- c(T, F, NA, T)
typeof(myAtomicVector_01[3])
myAtomicVector_01 <- c(T, F, NA, T)
typeof(myAtomicVector_01[3])
myNum <- 3 + "3"
(myVec <- as.logical(T, F, 4, 1, -1))
myVec
as.logical(T, F, 4, 1, -1)
(myVec <- logical(T, F, 4, 1, -1))
str(1:5)
str(1:5, by = 2)
prime(1:30)
x_1:5
x <- 1:5
y <- 1:3
x+y
x <- 1:4
y <- 5:6
z <- x + y
(z <- x + y)
x <- 1:5
y <- 5:6
(z <- x + y)
x <- NA
(x <- NA)
(x <- NULL)
x <- c(1:5, NA)
length(x)
x <- c(1:5, NULL, NA)
length(x)
length(x)
x <- c(1:5, NULL, NA)
x <- NULL
length(x)
x <- c(1:5, NULL, NA)
x[3] <- NULL
x <- c(1:5, NULL, NA)
x[3] <- NULL
x <- c(1:5, NULL, NA)
x <- c(1:5, NULL, NA)
(x[3] <- NULL)
x
abc <- tidyjson::read_json("~/Desktop/test.json")
x <- abc %>%
gather_array %>%
spread_values(main.first.name = jstring("main", "first_name"),
main.last.name = jstring("main", "last_name"),
main.country = jstring("main", "country"),
main.work = jstring("main", "work"),
main.university = jstring("main", "university")
) %>%
enter_object("friends") %>%
gather_array %>%
spread_values(friends.gender = jstring("gender"),
friends.first.name = jstring("name", "fname"),
friends.last.name = jstring("name", "lname"),
friends.country = jstring("country"),
friends.work = jstring("work"),
friends.freq = jstring("freq"),
friends.language.primary = jstring("languages", "primary"),
friends.language.secondary = jstring("languages", "secondary"),
friends.university = jstring("university")
)})
x <- abc %>%
gather_array %>%
spread_values(main.first.name = jstring("main", "first_name"),
main.last.name = jstring("main", "last_name"),
main.country = jstring("main", "country"),
main.work = jstring("main", "work"),
main.university = jstring("main", "university")
) %>%
enter_object("friends") %>%
gather_array %>%
spread_values(friends.gender = jstring("gender"),
friends.first.name = jstring("name", "fname"),
friends.last.name = jstring("name", "lname"),
friends.country = jstring("country"),
friends.work = jstring("work"),
friends.freq = jstring("freq"),
friends.language.primary = jstring("languages", "primary"),
friends.language.secondary = jstring("languages", "secondary"),
friends.university = jstring("university"))
library(tidyjson)
library(magrittr)
system.time({
x <- abc %>%
gather_array %>%
spread_values(main.first.name = jstring("main", "first_name"),
main.last.name = jstring("main", "last_name"),
main.country = jstring("main", "country"),
main.work = jstring("main", "work"),
main.university = jstring("main", "university")
) %>%
enter_object("friends") %>%
gather_array %>%
spread_values(friends.gender = jstring("gender"),
friends.first.name = jstring("name", "fname"),
friends.last.name = jstring("name", "lname"),
friends.country = jstring("country"),
friends.work = jstring("work"),
friends.freq = jstring("freq"),
friends.language.primary = jstring("languages", "primary"),
friends.language.secondary = jstring("languages", "secondary"),
friends.university = jstring("university"))
})
abc <- tidyjson::read_json("~/Desktop/test.json")
system.time({
x <- abc %>%
gather_array %>%
spread_values(main.first.name = jstring("main", "first_name"),
main.last.name = jstring("main", "last_name"),
main.country = jstring("main", "country"),
main.work = jstring("main", "work"),
main.university = jstring("main", "university")
) %>%
enter_object("friends") %>%
gather_array %>%
spread_values(friends.gender = jstring("gender"),
friends.first.name = jstring("name", "fname"),
friends.last.name = jstring("name", "lname"),
friends.country = jstring("country"),
friends.work = jstring("work"),
friends.freq = jstring("freq"),
friends.language.primary = jstring("languages", "primary"),
friends.language.secondary = jstring("languages", "secondary"),
friends.university = jstring("university"))
})
3000*16
library(tidyjson)
library(magrittr)
abc <- tidyjson::read_json("~/Desktop/test.json")
library(tidyjson)
library(magrittr)
abc <- tidyjson::read_json("~/Desktop/test.json")
system.time({
x <- abc %>%
gather_array %>%
spread_values(main.first.name = jstring("main", "first_name"),
main.last.name = jstring("main", "last_name"),
main.country = jstring("main", "country"),
main.work = jstring("main", "work"),
main.university = jstring("main", "university")
) %>%
enter_object("friends") %>%
gather_array %>%
spread_values(friends.gender = jstring("gender"),
friends.first.name = jstring("name", "fname"),
friends.last.name = jstring("name", "lname"),
friends.country = jstring("country"),
friends.work = jstring("work"),
friends.freq = jstring("freq"),
friends.language.primary = jstring("languages", "primary"),
friends.language.secondary = jstring("languages", "secondary"),
friends.university = jstring("university"))
})
2000/60
y <- x %>% select(main.first.name:friends.university)
y <- x %>% dplyr::select(main.first.name:friends.university)
y
y$main.full.name <- paste(y$main.first.name, y$main.last.name)
unique(y$main.full.name)
nrow(unique(y$main.full.name))
length(unique(y$main.full.name))
if(!require("knitr")){install.packages("knitr", repos = "http://cran.us.r-project.org")}
if(!require("pander")){install.packages("pander", repos = "http://cran.us.r-project.org")}
library(knitr)
library(pander)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(dev = 'jpeg')
panderOptions("table.style", "rmarkdown")
panderOptions("table.alignment.default", "left")
# Creating the bootcamp vectors
courseNum <- c(501, 502, 504, 593)
courseName <- c("Computation for Analytics",
"Review of Linear Algebra",
"Review of Probability and Statistics",
"Exploratory Data Analysis")
courseProf <- c("Terence Parr",
"David Uminsky",
"Jeff Hamrick",
"Paul Intrevado")
enrolled <- c(T, F, T, T)
anticipatedGrade <- c("A", NA, "B+", "A-")
anticipatedHours <- c(14, NA, 18, 16)
# Creating vector of names of each bootcamp vector
bootcampNames <- c("courseNum", "courseName", "courseProf", "enrolled",
"anticipatedGrade", "anticipatedHours")
# Creating vector of types of each bootcamp vector
Type <- c(typeof(courseNum), typeof(courseName), typeof(courseProf), typeof(enrolled),
typeof(anticipatedGrade), typeof(anticipatedHours))
# Creating vector of classes of each bootcamp vector
Class <- c(class(courseNum), class(courseName), class(courseProf), class(enrolled),
class(anticipatedGrade), class(anticipatedHours))
# Creating table of bootcamp vector types and classes
vector_info <- cbind(bootcampNames, Type, Class)
colnames(vector_info) <- c("**Variable Name**", "**Type**", "**Class**")
set.caption("Types and Classes of Bootcamp Vectors")
pandoc.table(vector_info)
# Creating data frame of bootcamp vectors
bootcampDataFrame <- data.frame(courseNum, courseName, courseProf, enrolled,
anticipatedGrade, anticipatedHours)
# Creating table of bootcampDataFrame types and classes
dataframe_info <- cbind(names(bootcampDataFrame),
vapply(bootcampDataFrame, typeof, character(1)),
vapply(bootcampDataFrame, class, character(1)))
colnames(dataframe_info) <- c("**Variable Name**", "**Type**", "**Class**")
row.names(dataframe_info) <- NULL
emphasize.strong.rows(c(2, 3))
set.caption("Types and Classes of `bootcampDataFrame` variables")
pandoc.table(dataframe_info)
# Creating list of bootcamp vectors
bootcampDataList <- list(courseNum, courseName, courseProf, enrolled,
anticipatedGrade, anticipatedHours)
# Assigning names to elements of bootcampDataList
names(bootcampDataList) <- bootcampNames
# Creating table of bootcampDataList types and classes
list_info <- cbind(names(bootcampDataList),
vapply(bootcampDataList, typeof, character(1)),
vapply(bootcampDataList, class, character(1)))
colnames(list_info) <- c("**Variable Name**", "**Type**", "**Class**")
row.names(list_info) <- NULL
set.caption("Types and Classes of `bootcampDataList` variables")
pandoc.table(list_info)
library(dplyr)
c(1,2,3) %>% mean()
x <- c(1,2,3)
x %<>% mean()
summarise_each(iris, funs(mean))
summarise_each(iris, funs(mean), warning = F)
summarise_each(iris, funs(mean))
summarise_all(iris, funs(mean))
babynames %>% filter(year == 1890)
babynames %>% filter(year == "1890")
babynames
library("babynames", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
babynames %>% filter(year == "1890")
detach("package:babynames", unload=TRUE)
library("ggplot2movies", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot2movies %>% filter(year == "1890")
ggplot2movies %>% filter(year == "1880")
movies %>% filter(year == "1880")
movies %>% filter(year >= "1880", year < 1890)
movies %>% filter(year >= 1880, year < 1890)
movies$year
str(movies$year)
movies %>% filter(year >= 1890, year < 1900)
?cut
knitr::opts_chunk$set(echo = F)
myMovies <- movies
myMovies %<>%  mutate(
decade = cut(year, breaks = seq(1890, 2010, by = 10, include.lowest = T, right = T), labels = paste(seq(1890, 2009, by = 10), "s", sep = "")))
library(tidyverse)
library(ggplot2movies)
library(scales)
library(magrittr)
library(knitr)
myMovies %<>%  mutate(
decade = cut(year, breaks = seq(1890, 2010, by = 10, include.lowest = T, right = T), labels = paste(seq(1890, 2009, by = 10), "s", sep = "")))
decade <- cut(myMovies$year,
breaks = seq(1890, 2010, by = 10, include.lowest = T, right = T),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade <- cut(myMovies$year,
breaks = seq(1890, 2010, by = 10, include.lowest = T),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade <- cut(myMovies$year,
breaks = seq(1890, 2010, by = 10),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade
decade %>% n()
decade %>% n(.)
decade %>% group_by() %>% n()
decade <- factor(cut(myMovies$year,
breaks = seq(1890, 2010, by = 10),
labels = paste(seq(1890, 2009, by = 10), "s", sep = "")))
decade %>% group_by() %>% n()
decade <-(cut(myMovies$year,
breaks = seq(1890, 2010, by = 10),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade %>% group_by() %>% n()
decade <-(cut(myMovies$year,
breaks = seq(1890, 2010, by = 10),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade %>% group_by() %>% n()
decade <-cut(myMovies$year,
breaks = seq(1890, 2010, by = 10),
labels = paste(seq(1890, 2009, by = 10), "s", sep = ""))
decade %>% summarise(n = n())
decade
filter(decade == "1890s")
decade == "1890s"
filter(x = data.frame(i = decade), i == "1890s")
filter(x = data.frame(decade), decade == "1890s")
x = data.frame(decade)
filter(x = data.frame(decade), x$decade == "1890s")
x$decade
x = data.frame(decade)
filter(x, decade == "1890s")
library(jsonlight)
library(jsonlite)
x <- fromJSON("~/Desktop/hw2.json")
y <- flatten(x)
z <- unnest(y)
z <- tidyr::unnest(y)
df <- data_frame(
x = 1:2,
y = list(
data_frame(z = 1),
data_frame(z = 3:4)
)
)
df <- tibble::data_frame(
x = 1:2,
y = list(
data_frame(z = 1),
data_frame(z = 3:4)
)
)
library(tibble)
df <- data_frame(
x = 1:2,
y = list(
data_frame(z = 1),
data_frame(z = 3:4)
)
)
df %>% unnest(y)
library(tidyr)
df %>% unnest(y)
df
z <- tidyr::unnest(y)
z <- flatten(y)
y <- flatten(x, recursive = T)
View(y)
unnest(y$friends)
unnest(as_data_frame(y$friends))
xxx <- unnest(as_data_frame(y$friends))
x <- fromJSON("~/Desktop/hw2.json")
y <- flatten(x, recursive = T)
View(y)
z <- fromJSON(x$friends)
z <- fromJSON(x$main)
z <- fromJSON(x)$main
x <- fromJSON("~/Desktop/hw2.json")$main
y <- fromJSON("~/Desktop/hw2.json")$friends
z <- unnest(y)
jsonlite::prettify(x)
z <- fromJSON(y)$
jsonlite::prettify("~/Desktop/hw2.json")
x <- fromJSON("~/Desktop/hw2.json")
z <- fromJSON(y)$
jsonlite::prettify(x)
library(magrittr)
x %>% gather_keys %>% json_types %>% json_lengths
library(tidyjson)
x %>% gather_keys %>% json_types %>% json_lengths
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
rm(list = ls())
cat("\014")
library(jsonlite)
library(dplyr)
fileName <- '~/Desktop/hw2.json'
json_text <- readChar(fileName, file.info(fileName)$size)
system.time({json_df <- fromJSON(json_text)})
fixed_df <- json_df$main %>% mutate(friends = json_df$friends)
fixed_df
View(fixed_df)
setwd("~/Dropbox/USF/MSAN/MSAN 593/msan593public2017fall/hw2/q3_data/")
list.files(pattern = "*.csv")
list.files(pattern = "*.csv")
(list.files(pattern = "*.csv"))
(temp = list.files(pattern = "*.csv"))
temp
tempLlist = list.files(pattern = "*.csv")
setwd("~/Dropbox/USF/MSAN/MSAN 593/msan593public2017fall/hw2/q3_data/")
tempLlist <-list.files(pattern = "*.csv")
fileList <- lapply(tempList, readr::read_csv)
tempList <-list.files(pattern = "*.csv")
fileList <- lapply(tempList, readr::read_csv)
tempList <-list.files(pattern = "*.csv")
fileList <- lapply(tempList, readr::read_csv)
myDF <- bind_rows(fileList)
setwd("~/Dropbox/USF/MSAN/MSAN 593/msan593public2017fall/hw2/q3_data/")
tempList <-list.files(pattern = "*.csv")
tempList
fileList <- lapply(tempList, readr::read_csv)
```{r eval = T, cache = T}
setwd("~/Dropbox/USF/MSAN/MSAN 593/msan593public2017fall/hw2/q3_data/")
tempList <-list.files(pattern = "*.csv")
fileList <- lapply(tempList, readr::read_csv)
myDF <- bind_rows(fileList)
myFlights <- hflights::hflights
myFlights %>%
mutate(actualAirbornePct = AirTime / ActualElapsedTime)
View(myFlights)
(sales <- read_csv("~/Dropbox/USF/MSAN/MSAN 593 - MBA workshop/courseData/tidyr_separate_memberCardSales.csv"))
(sales <- readr::read_csv("~/Dropbox/USF/MSAN/MSAN 593 - MBA workshop/courseData/tidyr_separate_memberCardSales.csv"))
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10),
)
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
rm(list=ls())
cat("\014")
x <- 1:10
cut(x, breaks(-Inf, 2, 4))
cut(x, breaks = (-Inf, 2, 4))
cut(x, breaks = c(-Inf, 2, 4))
?cut
cut(x, breaks = c(-Inf, 2, 4), include.lowest = T)
cut(x, breaks = c(-Inf, 2, 4), right = T)
cut(x, breaks = c(-Inf, 2, 4), right = F)
rm(list=ls())
cat("\014")
x <- 1:10
cut(x, breaks = c(-Inf, 2, 4), right = F)
cut(x, breaks = c(-Inf, 2, 4), right = T)
knitr::opts_chunk$set(echo = F)
myMovies %<>%  mutate(
decade = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = "")), right = F, ordered_result = T)
library(tidyverse)
library(ggplot2movies)
library(scales)
library(magrittr)
library(knitr)
myMovies <- movies
myMovies %<>%  mutate(
decade = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = "")), right = F, ordered_result = T)
myMovies %>%
group_by(decade) %>%
count %>%
knitr::kable(col.names = c("Decade", "Count"), format.args = list(big.mark = ","), align = c('c', 'c'))
cat("\014")
rm(list=ls())
library(tidyverse)
library(ggplot2movies)
library(scales)
library(magrittr)
library(knitr)
myMovies <- movies
myMovies %<>%  mutate(
decadeT = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = ""), right = F, ordered_result = T))
myMovies %<>%  mutate(
decadeF = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = ""), right = F, ordered_result = F))
myMovies %>% filter(decadeF != decadeT)
myMovies %<>%  mutate(
decadeF = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = ""), right = F, ordered_result = T))
myMovies %>%
group_by(decadeF) %>%
count %>%
knitr::kable(col.names = c("Decade", "Count"), format.args = list(big.mark = ","), align = c('c', 'c'))
myMovies %<>%  mutate(
decade = cut(year, breaks = seq(1890, 2010, by = 10), labels = paste(seq(1890, 2009, by = 10), "s", sep = ""), right = F, ordered_result = T))
myMovies %>%
group_by(decade) %>%
count %>%
knitr::kable(col.names = c("Decade", "Count"), format.args = list(big.mark = ","), align = c('c', 'c'))
